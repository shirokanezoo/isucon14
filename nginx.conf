#user nginx;
user www-data;
pid /run/nginx.pid;

worker_processes 2;
worker_rlimit_nofile 12288;

events {
  worker_connections 4096;
}

http {
  log_format ltsv "status:$status"
    "\ttime:$time_iso8601"
    "\treqtime:$request_time"
    "\tmethod:$request_method"
    "\turi:$request_uri"
    "\tprotocol:$server_protocol"
    "\tua:$http_user_agent"
    "\tforwardedfor:$http_x_forwarded_for"
    "\thost:$remote_addr"
    "\treferer:$http_referer"
    "\tserver_name:$server_name"
    "\tvhost:$host"
    "\tsize:$body_bytes_sent"
    "\treqsize:$request_length"
    "\truntime:$upstream_http_x_runtime"
    "\tapptime:$upstream_response_time"
    "\tuid:$upstream_http_x_isu_userid"
    "\txtime:$upstream_http_x_isu_time"
    "\treqid:$upstream_http_x_isu_reqid";
  access_log /var/log/nginx/access.log ltsv;
  #access_log off;
  error_log /var/log/nginx/error.log warn;

  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile on;
  open_file_cache max=1024 inactive=60s;
  tcp_nopush on;

  #gzip on;
  #gzip_min_length 1100;
  #gzip_buffers 4 8k;
  #gzip_types application/atom+xml text/plain text/css text/javascript application/json application/javascript;
  #gzip_vary on;
  #gzip_disable        "MSIE [1-6]\.";
  gzip_static on;

  keepalive_timeout  65;
  # keepalive_requests 10000;

  proxy_buffers 100 32k;
  proxy_buffer_size 8k;

  client_body_buffer_size 2M;
  client_max_body_size 20M;

  upstream app {
    server unix:/run/isuride/puma.sock fail_timeout=0;
    #server 127.0.0.1:8080 fail_timeout=0;
  }
  upstream isu1 {
    #server isu1:8888 fail_timeout=0;
    server unix:/run/isuride/puma.sock fail_timeout=0;
  }
  upstream isu2 {
    server isu2:8888 fail_timeout=0;
  }
  upstream isu3 {
    server isu3:8888 fail_timeout=0;
  }

  upstream tobidougu {
    server isu3:8080 fail_timeout=0;
  }

  upstream isu {
    #server isu1:8888 fail_timeout=0;
    server unix:/run/isuride/puma.sock fail_timeout=0 weight=16;
    server isu2:8888 fail_timeout=0 weight=16;
    #server isu3:8888 fail_timeout=0 weight=12;
  }

  server {
    listen 8888;
    listen [::]:8888;
    access_log off;

    location / {
      proxy_set_header Host $host;
      proxy_read_timeout 600;
      proxy_ignore_headers X-Accel-Redirect;
      add_header "X-Accel-Redirect" $upstream_http_x_zoo_redirect;
      proxy_pass http://app;
    }
  }

  server {
    listen 80 default_server;
    server_name _;
    index index.html index.htm index.nginx-debian.html;
    root /var/www/html;
    access_log off;
    location / {
      try_files $uri $uri/ =404;
    }
  }

  server {
    listen 443 ssl default_server;
    server_name _;
    index index.html index.htm index.nginx-debian.html;
    root /var/www/html;
    access_log off;

    # bot避けのためのvhostで、この証明書は自己署名です
    ssl_certificate     /etc/nginx/tls/dummy.crt;
    ssl_certificate_key /etc/nginx/tls/dummy.key;
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    location / {
      try_files $uri $uri/ =404;
    }
  }

  server {
    listen 443 ssl;
    server_name xiv.isucon.net;
    server_name *.xiv.isucon.net;

    ssl_certificate     /etc/nginx/tls/_.xiv.isucon.net.crt;
    ssl_certificate_key /etc/nginx/tls/_.xiv.isucon.net.key;

    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    client_max_body_size 10m;
    root /home/isucon/webapp/public/;
    location / {
      try_files $uri /index.html;
    }
    location /api/ {
      proxy_set_header Host $host;
      proxy_pass http://isu;
    }

    #location /api/app/notification {
    #  proxy_read_timeout 10m;
    #  proxy_set_header Host $host;
    #  proxy_buffering off;
    #  chunked_transfer_encoding off;
    #  proxy_pass http://tobidougu;
    #}

    #location /api/chair/notification {
    #  proxy_read_timeout 10m;
    #  proxy_set_header Host $host;
    #  proxy_buffering off;
    #  chunked_transfer_encoding off;
    #  proxy_pass http://tobidougu;
    #}

    location /api/internal/ {
      # localhostからのみアクセスを許可
      allow 127.0.0.1;
      deny all;
      proxy_set_header Host $host;
      proxy_pass http://isu;
    }
  }
}
